From f7c8f418437019b40d0e2f9c94ab1280056e64f6 Mon Sep 17 00:00:00 2001
From: Giuseppe Scrivano <gscrivan@redhat.com>
Date: Fri, 6 Dec 2013 12:23:58 +0100
Subject: [PATCH] virt-manager: do not cause a trace-back when it cannot
 open display

RHEL-only.

Based on the upstream commit: 395a20edd82f1072d23e80ecbb25dbeed9359304

Closes: https://bugzilla.redhat.com/show_bug.cgi?id=1025706
---
 src/virt-manager.py.in | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff --git a/src/virt-manager.py.in b/src/virt-manager.py.in
index 0756f5f..9d40d75 100755
--- a/src/virt-manager.py.in
+++ b/src/virt-manager.py.in
@@ -260,6 +260,7 @@ def main():
     # so lets catch it here & get the hell out...
     import warnings
     warnings.filterwarnings('error', module='gtk', append=True)
+    gtktraceback = None
     try:
         import gobject
 
@@ -269,6 +270,10 @@ def main():
             gobject.set_prgname(appname)
 
         import gtk
+
+        # This will error if Gtk wasn't correctly initialized
+        gtk.Window()
+
         globals()["gtk"] = gtk
     except Warning, e:
         # ...the risk is we catch too much though
@@ -276,22 +281,26 @@ def main():
         gtk_error = str(e)
     except Exception, e:
         gtk_error = e
+        gtktraceback = "".join(traceback.format_exc())
     warnings.resetwarnings()
 
     # Need to parse CLI after import gtk, since gtk strips --sync
     (options, ignore) = parse_commandline()
 
-    # Only raise this error after parsing the CLI, so users at least
-    # get --help output and CLI validation
-    if gtk_error:
-        if type(gtk_error) is str:
-            raise RuntimeError(_("Unable to initialize GTK: %s") % gtk_error)
-        raise gtk_error
-
     cli.setup_logging(appname, options.debug)
     global logging_setup
     logging_setup = True
 
+    # Only raise this error after parsing the CLI, so users at least
+    # get --help output and CLI validation
+    if gtk_error:
+        # Don't just let the exception raise here.
+        msg = str(e)
+        if gtktraceback:
+            logging.debug(gtktraceback)
+        print >> sys.stderr, "Unable to initialize GTK: %s" % msg
+        return 1
+
     logging.debug("Launched as: %s" % origargs)
     logging.debug("GTK version: %s" % str(gtk.gtk_version))
     logging.debug("virtManager import: %s" % str(virtManager))
-- 
1.9.0

